using System;
using System.Text;
using func.petooh;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace petooh.tests
{
    [TestClass]
    public class PetoohTests
    {
        private string Run(string program, string input = "")
        {
            var inputIndex = 0;
            var output = new StringBuilder();
            Petooh.Run(program,
                () => inputIndex >= input.Length ? -1 : input[inputIndex++],
                c => output.Append(c));
            Console.WriteLine(output);
            return output.ToString();
        }

        [TestMethod]
        public void Print()
        {
            Assert.AreEqual("\0", Run("Базарю"));
        }

        public static string MakeStr(string str, int count)
        {
            var res = "";
            for (var i = 0; i < count; i++)
            {
                res += str;
            }
            return res;
        }

        [TestMethod]
        public void Inc()
        {
            Assert.AreEqual("\x1", Run("ВнатуреБазарю"));
            Assert.AreEqual("\x5", Run("ВнатуреВнатуреВнатуреВнатуреВнатуреБазарю"));
            Assert.AreEqual("A", Run(MakeStr("Внатуре", 'A') + "Базарю"));
            Assert.AreEqual("Z", Run(MakeStr("Внатуре", 'Z') + "Базарю"));
            Assert.AreEqual("\xFF", Run(MakeStr("Внатуре", 255) + "Базарю"));
        }

        [TestMethod]
        public void Dec()
        {
            Assert.AreEqual("\0", Run("ВнатуреТипаБазарю"));
            Assert.AreEqual("\x1", Run("ВнатуреВнатуреВнатуреТипаТипаБазарю"));
            Assert.AreEqual("A", Run(MakeStr("Внатуре", 'C') + "ТипаТипаБазарю"));
        }

        [TestMethod]
        public void IncOverflow()
        {
            Assert.AreEqual("\x1", Run(MakeStr("Внатуре", 257) + "Базарю"));
        }

        [TestMethod]
        public void DecOverflow()
        {
            Assert.AreEqual("\xFF", Run("ТипаБазарю"));
            Assert.AreEqual("\x1", Run(MakeStr("Типа", 255) + "Базарю"));
        }

        [TestMethod]
        public void Shift()
        {
            Assert.AreEqual("\x2", Run("ВнатуреПравоВнатуреВнатуреБазарю"));
            Assert.AreEqual("\x1", Run("ВнатуреПравоВнатуреВнатуреЛевоБазарю"));
            Assert.AreEqual("\x1", Run("ВнатуреПравоВнатуреВнатуреПравоВнатуреВнатуреВнатуреЛевоЛевоБазарю"));
        }

        [TestMethod]
        public void ShiftOverflow()
        {
            Assert.AreEqual("\x2", Run("ВнатуреВнатуреЛевоПравоБазарю"));
            Assert.AreEqual("\x1", Run("ВнатуреЛевоВнатуреВнатуреЛевоВнатуреВнатуреВнатуреПравоПравоБазарю"));
            Assert.AreEqual("\x3", Run("ВнатуреВнатуреВнатуре" + MakeStr("Право", 30000) + "Базарю"));
            Assert.AreEqual("\x3", Run("ВнатуреВнатуреВнатуре" + MakeStr("Лево", 30000) + "Базарю"));
        }

        [TestMethod]
        public void Read()
        {
            Assert.AreEqual("A", Run("Слышь чеБазарю", "A"));
            Assert.AreEqual("ABC", Run("Слышь чеБазарюСлышь чеБазарюСлышь чеБазарю", "ABC"));
        }

        [TestMethod]
        public void HelloWorld()
        {
            Assert.AreEqual("Hello World!\n", Run(@"
ВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуре
ВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуре
ВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюБазарюВнатуреВнатуреВнатуреБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипа
ТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипа
ТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуре
ВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуре
ВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюВнатуреВнатуреВнатуреБазарюТипаТипаТипаТипаТипаТипаБазарюТипаТипаТипаТипаТипаТипаТипаТипаБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипа
ТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипа
ТипаТипаТипаТипаБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаБазарю
"));
        }

        [TestMethod]
        public void Task2_Loop()
        {
            Assert.AreEqual("\x0", Run("СюдаВнатуреБазарюТудаБазарю"));
            Assert.AreEqual("\x1\x0", Run("ВнатуреСюдаБазарюТипаТудаБазарю"));
            Assert.AreEqual("\x3\x2\x1\x0", Run("ВнатуреВнатуреВнатуреСюдаБазарюТипаТудаБазарю"));
        }

        [TestMethod]
        public void Task2_NestedLoops()
        {
            Assert.AreEqual("\x4", Run("ВнатуреВнатуреСюдаПравоВнатуреВнатуреСюдаПравоВнатуреЛевоТипаТудаЛевоТипаТудаПравоПравоБазарю"));
        }

        [TestMethod]
        public void Task2_HelloWorld()
        {
            Assert.AreEqual("Hello World!\n", Run(@"
ВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоВнатуреВнатуреВнатуреПравоВнатуреЛевоЛевоЛевоЛевоТипаТудаПравоВнатуреВнатуре
БазарюПравоВнатуреБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюБазарюВнатуреВнатуреВнатуреБазарюПравоВнатуреВнатуреБазарюЛевоЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюПравоБазарюВнатуреВнатуреВнатуреБазарю
ТипаТипаТипаТипаТипаТипаБазарюТипаТипаТипаТипаТипаТипаТипаТипаБазарюПравоВнатуреБазарюПравоБазарю"));
        }

        [TestMethod]
        public void Task2_BottlesOfBeer()
        {
            var text = Run(@"
ПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоСюдаПравоСюдаТипаТудаПравоСюдаТипаТудаЛевоЛевоСюдаПравоВнатуреПравоВнатуреЛевоЛевоТипаТудаПравоПравоСюдаЛевоЛевоВнатуреПравоПравоТипаТудаПравоПравоПраво
СюдаТипаТудаЛевоЛевоЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреЛевоСюдаПравоПравоПравоВнатуреЛевоЛевоСюдаПравоВнатуреПравоСюдаТипаТудаЛевоЛевоТипаТудаПравоСюдаЛевоВнатуреПравоТипаТудаПравоСюдаЛевоЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоПравоПравоВнатуреЛево
ТипаТудаЛевоЛевоТипаЛевоТипаТудаВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоСюдаЛевоТипаПравоТипаТудаПравоПравоВнатуреПравоСюдаЛевоСюдаТипаТудаЛевоЛевоВнатуреПравоПравоПравоТипаТудаПравоСюдаТипаТудаВнатуреЛевоЛевоСюдаПравоВнатуреПравоТипаЛевоЛевоТипаТудаЛевоЛевоЛево
СюдаПравоПравоВнатуреПравоВнатуреЛевоЛевоЛевоТипаТудаПравоПравоПравоСюдаЛевоЛевоЛевоВнатуреПравоПравоПравоТипаТудаПравоСюдаЛевоВнатуреПравоТипаТудаЛевоЛевоТипаСюдаПравоСюдаТипаТудаЛевоСюдаТипаТудаТудаПравоПравоВнатуреЛевоСюдаПравоСюдаТипаТудаЛевоТипаТудаЛевоВнатуреВнатуреВнатуре
ВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоПравоТипаТудаПравоПравоПравоСюдаПравоВнатуреПравоВнатуреЛевоЛевоТипаТудаПравоПравоСюдаЛевоЛевоВнатуреПравоПравоТипаТудаЛевоСюдаЛевоЛевоЛевоЛевоЛевоБазарюПравоПравоПравоПравоПравоТипа
ТудаЛевоЛевоЛевоЛевоЛевоЛевоБазарюПравоПравоСюдаТипаТудаПравоСюдаТипаТудаВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарюПравоВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоВнатуреВнатуреБазарюПравоВнатуре
ВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарюПравоЛевоВнатуреВнатуреВнатуреВнатуреВнатуреБазарюБазарюТипаТипаТипаТипаТипаТипаТипаТипаБазарюТипаТипаТипаТипаТипаТипаТипаБазарюПравоПравоСюдаПравоПравоВнатуреПравоВнатуреЛевоЛевоЛевоТипаТудаПраво
ПравоПравоСюдаЛевоЛевоЛевоВнатуреПравоПравоПравоТипаТудаЛевоСюдаЛевоЛевоЛевоЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюПравоПравоПравоПравоТипаТудаЛевоЛевоЛевоЛевоСюдаТипаТудаПравоВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуре
ВнатуреПравоТипаТудаЛевоБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоТипаТипаБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипа
ТипаТипаТипаТипаПравоТипаТудаЛевоБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарюВнатуреВнатуреВнатуреБазарюБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуре
ВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоТипаТипаБазарюТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуре
СюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоВнатуреВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоВнатуреВнатуреВнатуреВнатуреБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипа
ТипаБазарюТипаТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоТипаБазарю
ПравоВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛево
ТипаТипаТипаТипаТипаБазарюТипаТипаТипаБазарюПравоПравоПравоСюдаПравоВнатуреПравоВнатуреЛевоЛевоТипаТудаПравоПравоСюдаЛевоЛевоВнатуреПравоПравоТипаТудаЛевоСюдаЛевоЛевоЛевоЛевоЛевоБазарюПравоПравоПравоПравоПравоТипаТудаЛевоЛевоЛевоЛевоЛевоЛевоБазарюПравоПравоПравоВнатуреВнатуреВнатуре
ВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоВнатуреВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарю
ПравоЛевоВнатуреВнатуреВнатуреВнатуреВнатуреБазарюБазарюТипаТипаТипаТипаТипаТипаТипаТипаБазарюТипаТипаТипаТипаТипаТипаТипаБазарюПравоПравоСюдаПравоПравоВнатуреПравоВнатуреЛевоЛевоЛевоТипаТудаПравоПравоПравоСюдаЛевоЛевоЛевоВнатуреПравоПравоПравоТипаТудаЛевоСюдаЛевоЛевоЛевоЛевоВнатуреВнатуре
ВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюПравоПравоПравоПравоТипаТудаЛевоЛевоЛевоЛевоСюдаТипаТудаПравоВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуре
ВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоТипаТипаБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуре
ВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарюВнатуреВнатуреВнатуреБазарюБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛево
ТипаБазарюТипаТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоВнатуреВнатуреВнатуреВнатуреБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарю
ТипаТипаТипаТипаТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоТипаБазарю
ТипаБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипа
ТудаЛевоТипаТипаБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТуда
ЛевоВнатуреВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуре
ВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоВнатуреВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарюПравоВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаПраво
ТипаТудаЛевоБазарюПравоВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарюБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛево
ВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоВнатуреВнатуреВнатуреБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоВнатуреВнатуреВнатуреВнатуре
БазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарюПравоВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоТипаБазарюТипаТипаТипаБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюТипаТипаТипаТипа
ТипаТипаТипаБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоВнатуреБазарюТипаТипаТипаБазарюСюдаТипаТудаЛевоЛевоЛевоТипаПравоСюдаТипаТудаПравоСюда
ТипаТудаЛевоЛевоСюдаПравоВнатуреПравоВнатуреЛевоЛевоТипаТудаПравоПравоСюдаЛевоЛевоВнатуреПравоПравоТипаТудаПравоПравоПравоСюдаТипаТудаЛевоЛевоЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреЛевоСюдаПравоПравоПравоВнатуреЛевоЛевоСюдаПравоВнатуреПравоСюдаТипаТудаЛевоЛевоТипаТуда
ПравоСюдаЛевоВнатуреПравоТипаТудаПравоСюдаЛевоЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоПравоПравоВнатуреЛевоТипаТудаЛевоЛевоТипаЛевоТипаТудаВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоСюдаЛевоТипаПравоТипаТудаПравоПравоВнатуреПравоСюдаЛевоСюдаТипаТудаЛево
ЛевоВнатуреПравоПравоПравоТипаТудаПравоСюдаТипаТудаВнатуреЛевоЛевоСюдаПравоВнатуреПравоТипаЛевоЛевоТипаТудаЛевоЛевоЛевоСюдаПравоПравоВнатуреПравоВнатуреЛевоЛевоЛевоТипаТудаПравоПравоПравоСюдаЛевоЛевоЛевоВнатуреПравоПравоПравоТипаТудаЛевоПравоПравоСюдаЛевоВнатуреПравоТипаТудаЛево
ЛевоТипаСюдаПравоСюдаТипаТудаЛевоСюдаТипаТудаТудаПравоПравоВнатуреЛевоСюдаПравоСюдаТипаТудаЛевоТипаТудаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоПравоТипаТудаПравоПравоПравоСюдаПравоВнатуреПравоВнатуре
ЛевоЛевоТипаТудаПравоПравоСюдаЛевоЛевоВнатуреПравоПравоТипаТудаЛевоСюдаЛевоЛевоЛевоЛевоЛевоБазарюПравоПравоПравоПравоПравоТипаТудаЛевоЛевоЛевоЛевоЛевоЛевоБазарюПравоПравоСюдаТипаТудаПравоСюдаТипаТудаВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПраво
ТипаТудаЛевоБазарюПравоВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоВнатуреВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарюПравоЛевоВнатуреВнатуреВнатуреВнатуреВнатуреБазарюБазарюТипаТипаТипа
ТипаТипаТипаТипаТипаБазарюТипаТипаТипаТипаТипаТипаТипаБазарюПравоПравоСюдаПравоПравоВнатуреПравоВнатуреЛевоЛевоЛевоТипаТудаПравоПравоПравоСюдаЛевоЛевоЛевоВнатуреПравоПравоПравоТипаТудаЛевоСюдаЛевоЛевоЛевоЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуре
БазарюПравоПравоПравоПравоТипаТудаЛевоЛевоЛевоЛевоСюдаТипаТудаПравоВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоТипа
ТипаБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТуда
ЛевоБазарюВнатуреВнатуреВнатуреБазарюБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюда
ЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоТипаТипаБазарюТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоВнатуреВнатуреБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуре
ВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоВнатуреВнатуреВнатуреВнатуреБазарюТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаБазарюТипаТипаТипаБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоВнатуреБазарю
ПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреПравоТипаТудаЛевоТипаБазарюПравоВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоБазарюВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуре
БазарюБазарюПравоВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреВнатуреСюдаЛевоТипаТипаТипаТипаТипаТипаТипаТипаТипаТипаПравоТипаТудаЛевоТипаТипаТипаТипаТипаБазарюТипаТипаТипаБазарюВнатуреВнатуреВнатуреБазарюТипаТипаТипаБазарюСюдаТипаТудаЛевоЛевоЛевоТуда");

            Assert.IsTrue(text.Contains("99 Bottles of beer on the wall"));
            Assert.IsTrue(text.Contains("Take one down and pass it around"));
            Assert.IsTrue(text.Contains("43 Bottles of beer on the wall"));
            Assert.IsTrue(text.Contains("1 Bottle of beer on the wall"));
            Assert.IsTrue(text.Contains("0 Bottles of beer on the wall"));
        }

        [TestMethod]
        public void Task3_Constants()
        {
            Assert.AreEqual("Hello123", Run("HБазарюeБазарюlБазарюlБазарюoБазарю1Базарю2Базарю3Базарю"));
        }

        [TestMethod]
        public void Task4_OptimizedLoops()
        {
            var s = MakeStr("Базарю", 10000);
            Run("ZСюдаТипаПравоZСюдаТипаПравоСюда" + s + "ТудаЛевоТудаЛевоТуда");
        }

    }
}
